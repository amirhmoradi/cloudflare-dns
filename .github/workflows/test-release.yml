name: Create release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:

  get-tag:
    name: Get latest tag number
    needs: deploy
    if: always() && needs.deploy.result == 'success' && github.ref_name == 'master'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.latest-tag.outputs.new_version }}
      latest_tag: ${{ steps.latest-tag.outputs.latest_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Get Tags
        id: tags
        run: |
          git fetch --tags
          echo "Tags fetched"
      - name: Get Latest Tag
        id: latest-tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          IFS='.' read -r -a version_parts <<< "$latest_tag"
          major="${version_parts[0]}"
          minor="${version_parts[1]}"
          patch="${version_parts[2]}"
          if [[ "$(git log -1 --pretty=%B | tail -1 | tr '[:upper:]' '[:lower:]')" == hotfix* ]]; then
            new_version="$major.$minor.$((patch + 1))"
          elif [[ "$(git log -1 --pretty=%B | tail -1 | tr '[:upper:]' '[:lower:]')" == major* ]]; then
            new_version="$((major + 1)).0.0"
          else
            new_version="$major.$((minor + 1)).0"
          fi
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo $latest_tag
          echo "latest_tag=$latest_tag" >> GITHUB_OUTPUT

  release:
    name: Release pushed tag
    needs: get-tag
    if: always() && needs.get-tag.result == 'success' && github.ref_name == 'master'
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create '${{needs.get-tag.outputs.new_version}}' \
              --repo="$GITHUB_REPOSITORY" \
              --generate-notes \
              --title 'Release ${{needs.get-tag.outputs.new_version}}' \
              --target main \
              --notes-start-tag '${{needs.get-tag.outputs.latest_tag}}'
